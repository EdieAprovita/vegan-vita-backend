name: 🚀 Deploy to Staging

on:
  push:
    branches: [development]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '10'

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'workflow_dispatch' || github.event_name == 'push') && secrets.STAGING_SSH_KEY != '' && secrets.STAGING_SERVER_HOST != '' && secrets.STAGING_SERVER_USER != '' && secrets.STAGING_APP_PATH != '' && secrets.STAGING_APP_URL != '' && secrets.SLACK_WEBHOOK_URL != '' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm run build

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.STAGING_SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to staging server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.STAGING_SERVER_USER }}@${{ secrets.STAGING_SERVER_HOST }} << 'EOF'
          cd ${{ secrets.STAGING_APP_PATH }}
          git pull origin development
          pnpm install --frozen-lockfile
          pnpm run build
          systemctl restart vegan-vita-backend-staging || true
          EOF

      - name: Health check
        run: |
          sleep 5
          curl -f ${{ secrets.STAGING_APP_URL }}/api/health || exit 1

      - name: Slack notification - Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ Staging deployment successful",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*✅ VeganVita Backend - Staging Deployment*\n*Status:* Success\n*Branch:* development\n*Commit:* ${{ github.sha }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Slack notification - Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ Staging deployment failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*❌ VeganVita Backend - Staging Deployment*\n*Status:* Failed\n*Branch:* development\n*Commit:* ${{ github.sha }}\n*Log:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  deploy-skipped:
    name: Deploy (Skipped)
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'workflow_dispatch' || github.event_name == 'push') && (secrets.STAGING_SSH_KEY == '' || secrets.STAGING_SERVER_HOST == '' || secrets.STAGING_SERVER_USER == '' || secrets.STAGING_APP_PATH == '' || secrets.STAGING_APP_URL == '' || secrets.SLACK_WEBHOOK_URL == '') }}
    steps:
      - name: Explain skip
        run: |
          echo "## ℹ️ Staging deploy skipped" >> $GITHUB_STEP_SUMMARY
          echo "Missing staging deployment secrets. Configure STAGING_SSH_KEY, STAGING_SERVER_HOST, STAGING_SERVER_USER, STAGING_APP_PATH, STAGING_APP_URL and SLACK_WEBHOOK_URL to enable this workflow." >> $GITHUB_STEP_SUMMARY
