name: ‚è∞ Scheduled Tasks

on:
  schedule:
    # Daily at 2 AM UTC
    - cron: '0 2 * * *'
    # Weekly dependency check (Mondays at 8 AM UTC)
    - cron: '0 8 * * 1'
  workflow_dispatch:

jobs:
  # ============================================
  # JOB 1: Dependency Updates Check
  # ============================================
  dependency-check:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check outdated packages
        run: |
          echo "## üì¶ Outdated Packages Check" >> $GITHUB_STEP_SUMMARY
          pnpm outdated >> $GITHUB_STEP_SUMMARY || true

      - name: Audit for vulnerabilities
        run: |
          echo "## üîí Security Audit" >> $GITHUB_STEP_SUMMARY
          pnpm audit --audit-level=moderate >> $GITHUB_STEP_SUMMARY || true

      - name: Create dependency update PR
        if: failure()
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'chore: update dependencies'
          title: '[Automated] Dependency Updates Available'
          body: |
            ü§ñ Automated dependency update check found updates.

            Please review and merge if appropriate.
          branch: chore/update-dependencies
          delete-branch: true

  # ============================================
  # JOB 2: Code Quality Trend Analysis
  # ============================================
  code-quality-trend:
    name: Code Quality Trend Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate coverage
        run: pnpm run test:cov
        continue-on-error: true

      - name: Analyze trends
        run: |
          echo "## üìä Code Quality Metrics" >> $GITHUB_STEP_SUMMARY
          echo "Coverage reports generated" >> $GITHUB_STEP_SUMMARY

  # ============================================
  # JOB 3: Cleanup Old Artifacts
  # ============================================
  cleanup-artifacts:
    name: Cleanup Old Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Remove old artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: dist-*
          failOnError: false

  # ============================================
  # JOB 4: Database Health Check
  # ============================================
  database-health:
    name: Database Health Check
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vegan_vita_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run database migrations test
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: vegan_vita_test
        run: |
          echo "‚úÖ Database health check completed"

  # ============================================
  # JOB 5: Performance Baseline
  # ============================================
  performance-check:
    name: Performance Baseline Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: '10'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and analyze bundle size
        run: |
          pnpm run build
          echo "## üìä Build Artifacts Size" >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY

  # ============================================
  # JOB 6: Report Summary
  # ============================================
  summary:
    name: Scheduled Tasks Summary
    runs-on: ubuntu-latest
    needs:
      [
        dependency-check,
        code-quality-trend,
        cleanup-artifacts,
        database-health,
        performance-check,
      ]
    if: always()
    steps:
      - name: Generate summary
        run: |
          echo "## ‚è∞ Scheduled Tasks Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Task | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality | ${{ needs.code-quality-trend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Cleanup | ${{ needs.cleanup-artifacts.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Database Health | ${{ needs.database-health.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Performance | ${{ needs.performance-check.result }} |" >> $GITHUB_STEP_SUMMARY

      - name: Slack notification
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "text": "‚è∞ Scheduled maintenance completed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*‚è∞ VeganVita Backend - Scheduled Maintenance*\n*Status:* Completed\n*Timestamp:* $(date)"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        if: always()
